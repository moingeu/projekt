using System;
using System.Linq;					
public class Program
{
public class Player
{
    public string Name { get; set; }
    public char Symbol { get; set; }

    public Player(string name, char symbol)
    {
        Name = name;
        Symbol = symbol;
    }
}

public class Board
{
    public char[,] board;
    public int Size { get; }

    public Board(int size)
    {
        Size = size;
        board = new char[Size, Size];
    }

public void Print()
{
    Console.WriteLine("  " + string.Join(" ", Enumerable.Range(1, Size)));

    for (int row = 0; row < Size; row++)
    {
        Console.Write(row + 1 + " ");
        for (int col = 0; col < Size; col++)
        {
            Console.Write(board[row, col] + " ");
        }
        Console.WriteLine();
    }
}

    public bool Set(int row, int col, char symbol)
    {
        if (board[row, col] != '\0')
        {
            Console.WriteLine("Invalid move, that spot is already taken!");
            return false;
        }
        board[row, col] = symbol;
        return true;
    }

    public bool CheckWin(int row, int col, char symbol)
    {
        // check row
        for (int i = 0; i < Size; i++)
        {
            if (board[row, i] != symbol) break;
            if (i == Size - 1) return true;
        }
        // check column
        for (int i = 0; i < Size; i++)
        {
            if (board[i, col] != symbol) break;
            if (i == Size - 1) return true;
        }
        // check diagonal
        if (row == col)
        {
            for (int i = 0; i < Size; i++)
            {
                if (board[i, i] != symbol) break;
                if (i == Size - 1) return true;
            }
        }
        // check anti-diagonal
        if (row + col == Size - 1)
        {
            for (int i = 0; i < Size; i++)
            {
                if (board[i, Size - 1 - i] != symbol) break;
                if (i == Size - 1) return true;
            }
        }
        return false;
    }
}
static void Main(string[] args)
{
    Console.WriteLine("Welcome to Tic Tac Toe!");

    Console.Write("Enter player one's name: ");
    var player1 = new Player(Console.ReadLine(), 'X');
    Console.Write("Enter player two's name: ");
    var player2 = new Player(Console.ReadLine(), 'O');

    Console.Write("Enter board size: ");
    var size = int.Parse(Console.ReadLine());
    var board = new Board(size);

    var currentPlayer = player1;
   while (true)
{
    board.Print();

    Console.WriteLine($"{currentPlayer.Name}'s turn ({currentPlayer.Symbol})");
    Console.Write("Enter row: ");
    var row = int.Parse(Console.ReadLine()) - 1;
    Console.Write("Enter column: ");
    var col = int.Parse(Console.ReadLine()) - 1;

    if (!board.Set(row, col, currentPlayer.Symbol))
    {
        Console.WriteLine("Press any key to continue...");
        Console.ReadKey();
        continue;
    }

    if (board.CheckWin(row, col, currentPlayer.Symbol))
    {
        board.Print();
        Console.WriteLine($"{currentPlayer.Name} wins!");
        break;
    }

    if (currentPlayer == player1)
        currentPlayer = player2;
    else
        currentPlayer = player1;
}}}
